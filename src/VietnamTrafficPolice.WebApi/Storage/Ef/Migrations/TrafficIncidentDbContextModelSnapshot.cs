// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VietnamTrafficPolice.WebApi.Storage.Ef;

#nullable disable

namespace VietnamTrafficPolice.WebApi.Migrations
{
    [DbContext(typeof(TrafficIncidentDbContext))]
    partial class TrafficIncidentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_uca1400_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("VietnamTrafficPolice.WebApi.Storage.Ef.DistributedCache", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(449)
                        .HasColumnType("varchar(449)")
                        .UseCollation("ascii_bin");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Id"), "ascii");

                    b.Property<DateTime?>("AbsoluteExpiration")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ExpiresAtTime")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("SlidingExpirationInSeconds")
                        .HasColumnType("bigint(20)");

                    b.Property<byte[]>("Value")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ExpiresAtTime" }, "Index_ExpiresAtTime");

                    b.ToTable("DistributedCache", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
